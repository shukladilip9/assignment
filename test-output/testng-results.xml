<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="10" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="16225" started-at="2020-01-28T12:22:53Z" finished-at="2020-01-28T12:23:10Z">
    <groups>
    </groups>
    <test name="FunctionalTest" duration-ms="16225" started-at="2020-01-28T12:22:53Z" finished-at="2020-01-28T12:23:10Z">
      <class name="unit.arithmetic.test.ArithmeticCalculationTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="setUp" is-config="true" duration-ms="2" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="addAsciiChar()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="addAsciiChar" duration-ms="1" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAsciiChar -->
        <test-method status="PASS" signature="addNegativeNumbers()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="addNegativeNumbers" duration-ms="1" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addNegativeNumbers -->
        <test-method status="PASS" signature="subtractFunNegativeTest()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="subtractFunNegativeTest" duration-ms="2" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subtractFunNegativeTest -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="testAdd" duration-ms="0" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="testDivide()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="testDivide" duration-ms="1" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivide -->
        <test-method status="PASS" signature="testDivideByZero()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="testDivideByZero" duration-ms="1" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Divisor cannot divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Divisor cannot divide by zero
	at ArithmeticCalculation.ArithmeticCalculation.divide(ArithmeticCalculation.java:23)
	at unit.arithmetic.test.ArithmeticCalculationTest.testDivideByZero(ArithmeticCalculationTest.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivideByZero -->
        <test-method status="PASS" signature="testMultiply()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="testMultiply" duration-ms="1" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method status="PASS" signature="testSubtract()[pri:0, instance:unit.arithmetic.test.ArithmeticCalculationTest@18eed359]" name="testSubtract" duration-ms="1" started-at="2020-01-28T17:53:10Z" finished-at="2020-01-28T17:53:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubtract -->
      </class> <!-- unit.arithmetic.test.ArithmeticCalculationTest -->
      <class name="least.expensive.hotel.SearchLeastExpensivePropertyTest">
        <test-method status="PASS" signature="launchBrowser()[pri:0, instance:least.expensive.hotel.SearchLeastExpensivePropertyTest@6536e911]" name="launchBrowser" is-config="true" duration-ms="3167" started-at="2020-01-28T17:52:53Z" finished-at="2020-01-28T17:52:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="PropertyFinderTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:least.expensive.hotel.SearchLeastExpensivePropertyTest@6536e911]" name="PropertyFinderTest" duration-ms="11516" started-at="2020-01-28T17:52:58Z" data-provider="inputs" finished-at="2020-01-28T17:53:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dubai marina]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Rent]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PropertyFinderTest -->
      </class> <!-- least.expensive.hotel.SearchLeastExpensivePropertyTest -->
      <class name="api.test.LocationVerificationTest">
        <test-method status="PASS" signature="apiTest()[pri:0, instance:api.test.LocationVerificationTest@520a3426]" name="apiTest" duration-ms="1482" started-at="2020-01-28T17:52:57Z" description="Verifying entered location matches with Dubai on the lattitude/longitude basis &amp; google map API&#039;s response " finished-at="2020-01-28T17:52:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apiTest -->
      </class> <!-- api.test.LocationVerificationTest -->
    </test> <!-- FunctionalTest -->
  </suite> <!-- Suite -->
</testng-results>
